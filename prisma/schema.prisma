// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boards    Board[]
  comments  Comment[]
  roles     Role[]
}

model Board {
  id        String   @id @default(uuid())
  name      String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lists     List[]
  labels    Label[]
  users     User[]
  roles     Role[]
}

model List {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cards     Card[]
  boardId   String
  board     Board   @relation(fields: [boardId], references: [id])
}

model Card {
  id        String   @id @default(uuid())
  name      String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dueDate   DateTime

  comments  Comment[]
  listId    String
  lists      List    @relation(fields: [listId], references: [id])
  labels    Label[]
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  user      User     @relation(fields: [userId], references: [id])
  cardId    String
  card      Card    @relation(fields: [cardId], references: [id])
}

model Label {
  id        String   @id @default(uuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boardId   String
  board     Board   @relation(fields: [boardId], references: [id])
  cards     Card[]
}

model Role {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boardId   String
  board     Board   @relation(fields: [boardId], references: [id])
  users     User[]
}
